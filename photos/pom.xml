<?xml version="1.0"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>image</groupId>
        <artifactId>exifweb</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>image.exifweb</groupId>
    <artifactId>photos</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>photos</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>image.exifweb</groupId>
            <artifactId>cdm</artifactId>
        </dependency>
        <dependency>
            <groupId>image.exifweb</groupId>
            <artifactId>exifweb-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>image.exifweb</groupId>
            <artifactId>storage-jpa2x-hbm-impl</artifactId>
            <!--
                needs version because including test-jar also
                solves ERROR: The POM for exifweb:photos:jar:1.0-SNAPSHOT is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
            -->
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.rainerhahnekamp</groupId>
            <artifactId>sneakythrow</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hibernate5</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>image.exifweb</groupId>
            <artifactId>util</artifactId>
            <classifier>tests</classifier>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!--
            https://stackoverflow.com/questions/174560/sharing-test-code-in-maven
        -->
        <dependency>
            <groupId>image.exifweb</groupId>
            <artifactId>storage-entities</artifactId>
            <classifier>tests</classifier>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!--
            disabled till solving:
                https://issues.apache.org/jira/browse/SUREFIRE-1534
                ClassNotFoundException: org.apache.maven.plugin.surefire.StartupReportConfiguration
        -->
        <dependency>
            <groupId>image.exifweb</groupId>
            <artifactId>storage-jpa2x-hbm-impl</artifactId>
            <classifier>tests</classifier>
            <scope>test</scope>
            <!--
                needs version because including jar also
                solves ERROR: The POM for exifweb:photos:jar:1.0-SNAPSHOT is invalid, transitive dependencies (if any) will
                not be available, enable debug logging for more details
            -->
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration combine.self="append">
                    <!--<argLine>-Dspring.profiles.active=jdbc-ds</argLine>-->
                    <environmentVariables>
                        <!-- for catching tests without proper spring profile annotation -->
                        <spring.profiles.active>fake-profile</spring.profiles.active>
                    </environmentVariables>
                    <!--<groups>${junit4.photos.groups}</groups>-->
                    <groups>${junit5.photos.groups}</groups>
                    <!--<properties>-->
                    <!--<includeTags>MiscTestCategory</includeTags>-->
                    <!--<includeTags>image.photos.JsonMapperConfig</includeTags>-->
                    <!--<includeTags>image.photos.springconfigtosInMemoryDbConfig</includeTags>-->
                    <!--<includeTags>junit5&amp;photos&amp;inmemorydb</includeTags>-->
                    <!--<includeTags>junit5&amp;photos&amp;json</includeTags>-->
                    <!--<includeTags>junit5&amp;photos&amp;misc</includeTags>-->
                    <!--</properties>-->
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
